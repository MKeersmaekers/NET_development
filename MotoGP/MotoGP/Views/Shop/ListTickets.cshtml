@model MotoGP.Models.ViewModels.ListTicketsViewModel

@{
    ViewData["Title"] = "All Tickets";
}

<form asp-controller="Shop" asp-action="ListTickets" method="get">
    <select asp-for="ticketID" asp-items="Model.Races">
        <option value="0">-- Select a race --</option>
    </select>
    <input type="submit" value="filter"/>
</form>

<br />

<table>
    <tr>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].OrderDate))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Name))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Email))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Address))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Country))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Race))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Number))</th>
    </tr>
    @foreach (var ticket in Model.Tickets)
    {
        <tr>
            <td>@(Html.DisplayFor(modelItem => ticket.OrderDate))</td>
            <td>@(Html.DisplayFor(modelItem => ticket.Name))</td>
            <td>@(Html.DisplayFor(modelItem => ticket.Email))</td>
            <td>@(Html.DisplayFor(modelItem => ticket.Address))</td>
            <td>@(Html.DisplayFor(modelItem => ticket.Country.Name))</td>
            <td>@(Html.DisplayFor(modelItem => ticket.Race.Name))</td>
            <td>@(Html.DisplayFor(modelItem => ticket.Number))</td>
        </tr>
    }
</table>